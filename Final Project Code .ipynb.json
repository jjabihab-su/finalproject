{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rk</th>\n",
       "      <th>Player</th>\n",
       "      <th>Pos</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tm</th>\n",
       "      <th>G</th>\n",
       "      <th>GS</th>\n",
       "      <th>MP</th>\n",
       "      <th>3P</th>\n",
       "      <th>2P</th>\n",
       "      <th>FT</th>\n",
       "      <th>ORB</th>\n",
       "      <th>DRB</th>\n",
       "      <th>STL</th>\n",
       "      <th>TOV</th>\n",
       "      <th>PTS</th>\n",
       "      <th>Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Álex Abrines</td>\n",
       "      <td>SG</td>\n",
       "      <td>25</td>\n",
       "      <td>OKC</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>19.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>5.3</td>\n",
       "      <td>Stats</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Quincy Acy</td>\n",
       "      <td>PF</td>\n",
       "      <td>28</td>\n",
       "      <td>PHO</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>Stats</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Jaylen Adams</td>\n",
       "      <td>PG</td>\n",
       "      <td>22</td>\n",
       "      <td>ATL</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>12.6</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.3</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.8</td>\n",
       "      <td>3.2</td>\n",
       "      <td>Stats</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Steven Adams</td>\n",
       "      <td>C</td>\n",
       "      <td>25</td>\n",
       "      <td>OKC</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>33.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.6</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1.7</td>\n",
       "      <td>13.9</td>\n",
       "      <td>Stats</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>Bam Adebayo</td>\n",
       "      <td>C</td>\n",
       "      <td>21</td>\n",
       "      <td>MIA</td>\n",
       "      <td>82</td>\n",
       "      <td>28</td>\n",
       "      <td>23.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>0.9</td>\n",
       "      <td>1.5</td>\n",
       "      <td>8.9</td>\n",
       "      <td>Stats</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Rk        Player Pos Age   Tm   G  GS    MP   3P   2P   FT  ORB  DRB  STL  \\\n",
       "0  1  Álex Abrines  SG  25  OKC  31   2  19.0  1.3  0.5  0.4  0.2  1.4  0.5   \n",
       "1  2    Quincy Acy  PF  28  PHO  10   0  12.3  0.2  0.2  0.7  0.3  2.2  0.1   \n",
       "2  3  Jaylen Adams  PG  22  ATL  34   1  12.6  0.7  0.4  0.2  0.3  1.4  0.4   \n",
       "3  4  Steven Adams   C  25  OKC  80  80  33.4  0.0  6.0  1.8  4.9  4.6  1.5   \n",
       "4  5   Bam Adebayo   C  21  MIA  82  28  23.3  0.0  3.4  2.0  2.0  5.3  0.9   \n",
       "\n",
       "   TOV   PTS   Type  \n",
       "0  0.5   5.3  Stats  \n",
       "1  0.4   1.7  Stats  \n",
       "2  0.8   3.2  Stats  \n",
       "3  1.7  13.9  Stats  \n",
       "4  1.5   8.9  Stats  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#importing player and stat information \n",
    "stat_url = \"https://www.basketball-reference.com/leagues/NBA_2019_per_game.html\"\n",
    "stat_data = pd.read_html(stat_url)\n",
    "stat_df = stat_data[0]\n",
    "stat_df = stat_df.drop(columns=['FG', 'FGA', 'FG%', '3PA', '3P%', '2PA', '2P%', 'eFG%', 'FTA', 'FT%', 'TRB', 'AST', 'BLK', 'PF'])\n",
    "stat_df['Type'] = 'Stats'\n",
    "stat_df.head(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "import warnings \n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'29'"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def get_player(player1):\n",
    "    player_index=stat_df[stat_df[\"Player\"]==player1].index.item()\n",
    "    return player_index\n",
    "get_player1(\"Quincy Acy\")\n",
    "\n",
    "def get_player2(player2):\n",
    "    player_index=stat_df[stat_df[\"Player\"]==player2].index.item()\n",
    "    return player_index\n",
    "get_player2(\"Kevin Durant\")\n",
    "\n",
    "def get_stat(name,stat):\n",
    "    name_value=get_player1(name)\n",
    "    player1_stat=stat_df.get_value(name_value,stat)\n",
    "    return player1_stat\n",
    "get_stat(\"Kevin Durant\",'Age')\n",
    "\n",
    "def get_stat2(name,stat):\n",
    "    name_value=get_player2(name)\n",
    "    player2_stat=stat_df.get_value(name_value,stat)\n",
    "    return player2_stat\n",
    "get_stat2(\"James Harden\",'Age')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stat_categor_num=['GS','MP','3P','2P','FT','ORB','DRB','STL','TOV','PTS','Type']\n",
    "def match_stat(stat):\n",
    "    if stat in stat_categor_num:\n",
    "        return True\n",
    "    else:\n",
    "        return False\n",
    "match_stat(\"DRB\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "What player would you like to compare first? James Harden\n",
      "What player would you like to compare second? Kevin Durant\n",
      "What stat would you like to compare. \n",
      "Your choices are Pos, Age, Tm, GS, MP, 3P, 2P, FT, ORB, DRB, STL, TOV, PTS, TypeTOV\n",
      "James Harden 5.0\n",
      "Kevin Durant 2.9\n",
      "James Harden has higher TOV than Kevin Durant\n"
     ]
    }
   ],
   "source": [
    "try:    \n",
    "    player1=input(\"What player would you like to compare first? \")\n",
    "    player2=input(\"What player would you like to compare second? \")\n",
    "    stat_input=input(\"What stat would you like to compare. \\nYour choices are Pos, Age, Tm, GS, MP, 3P, 2P, FT, ORB, DRB, STL, TOV, PTS, Type\")\n",
    "    name1=get_player(player1)\n",
    "    name2=get_player(player2)\n",
    "    results1=get_stat(player1,stat_input)\n",
    "    results2=get_stat(player2,stat_input)\n",
    "    print(player1,results1)\n",
    "    print(player2,results2)\n",
    "    if match_stat(stat_input)== True:\n",
    "        if results1>results2:\n",
    "            print(player1,'has higher',stat_input,'than',player2)\n",
    "        if results2>results1:\n",
    "            print(player2,'has higher',stat_input,'than',player1)\n",
    "        if results1==results2:\n",
    "            print (player1,\"has the same\",stat_input,'as',player2)\n",
    "    if match_stat(stat_input)==False and stat_input==\"Pos\":\n",
    "        if results1==results2:\n",
    "            print(player1,'and',player2,'play the same postion')\n",
    "        else:\n",
    "            print(player1,'and',player2,'play different postions')\n",
    "    if match_stat(stat_input)==False and stat_input==\"Tm\":\n",
    "        if results1==results2:\n",
    "            print(player1,'and',player2,'play on the same team')\n",
    "        else:\n",
    "            print(player1,'and',player2,'play on different teams')\n",
    "    if match_stat(stat_input)==False and stat_input==\"Age\":\n",
    "        if results1>results2:\n",
    "            print(player1,'is older',stat_input,'than',player2)\n",
    "        if results2>results1:\n",
    "            print(player2,'is older',stat_input,'than',player1)\n",
    "        if results1==results2:\n",
    "            print(player1,'is the same age as',player2)\n",
    "            \n",
    "except ValueError:\n",
    "    print(\"Whoops something went wrong. Try Again.\")\n",
    "\n",
    "    #player2_stat=get_stat(player2,stat_input)\n",
    "    #print(player1_stat,player2_stat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

